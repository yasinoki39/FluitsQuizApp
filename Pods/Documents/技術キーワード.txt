▼技術キーワード
#Clean Architecture 
Clean Architectureとは、ソフトウェアをレイヤーに分けることによって、
関心の分離を達成するためのアーキテクチャパターンです
フレームワーク独立
テスト可能
UI独立
データベース独立
外部機能独立

#Flux 
Fluxとは, アプリケーションのデータフロー管理のためのアーキテクチャパターンである.   
もっとも重要なコンセプトは`データフローが一方向にしか流れないこと`である. 

#Multi Module 
差分ビルドの高速化やDynamic Feature Moduleへの対応などのメリットがあります。
それらに加えて個人的に一番のメリットは依存関係が強制化されることによってアプリ内の依存関係が整理され、
必要なコードにのみ依存することで可読性・メンテナンス性が向上することかなと思っています。

#MVVM 
Model View ViewModel

Modelはそのアプリケーションが扱うデータの処理を行い、データの変更をViewに通知するという役割を担っています。
ViewはModelが扱っているデータを取り出して、WebブラウザなどのUIへの出力を行います

ViewModelはModelとViewを紐付ける接着剤のような役割を果たします

データバインディングとは、ViewとView Modelを結び付ける仕組みのことです。
データの値を結び付けるので、データバインディングと呼ばれているのです。
データバインディングの特徴は、ViewとView Modelどちらかで値が書き変われば、値が変化するたびにViewとView Model、両方の値が変更されるという点です。
これはつまり、ユーザーが画面上で何らかの処理した場合でも、コンピューター上やサーバ上で何らかの処理があった場合でもViewとView Modelそれぞれに反映されるということです。

#MVC
サービスの内部データをユーザーが参照・編集する情報から分離して管理するものになります。
そのために、プログラムを「Model」「View」「Controller」の３つに分割します。

Controllerはユーザーから入力されたものをModelに伝えるものです


#UI Components Catalog 
UIコンポーネントは、フォーム、テキストフィールド、ボタンなどの画面を構成するコンポーネントです。

#Combine 
Combineとは、アプリがイベントをどのように処理するのかを、宣言的に書くことのできるAPIです。
要するに、ReactiveSwiftやRxSwiftのような、関数型リアクティブプログラミング（FRP）のフレームワークです

#Fastlane 
iOSアプリのビルドツールfastlane
これを入れるとコマンド１つでアーカイブとiTunesConnectへの提出をしてくれるようになります

#Firebase 
GCP の mobile Backend as a Service（mBaaS）
Firebase は Google が提供しているモバイルおよび Web アプリケーションのバックエンドサービスです。
クラウドサービスの形態では BaaS に位置付けされます。

#ReactiveSwift 
swiftでFunctional Reactive Programming（以下FRP）を実現するライブラリの1つです。

#RxSwift 
非同期イベントを受け取るための枠組み　を提供してくれるライブラリです。
FRPのフレームワークの一つ
非同期処理のコールバック地獄をとてもシンプルに書くことができます。

#SwiftUI 
iOSアプリ開発における新しいUIフレームワーク


#Unio 
構造体の仲間

#VueFlux 
VueFluxは登壇者の青山氏が開発したフレームワークで、Flux（Redux）を採用する上での下記の問題を解決しています。

Stateの中央集中によるつらみ
型情報がスポイルされるたりOptionalな情報が多いことによるcast、unwrapの嵐…
登壇者曰く、「画面とStateが1:1のMulti-Store構成でStateがMutableと、
ユーザの多いReduxの逆を行ったもののiOSでのFluxとMVVMの辛さをうまく丸める感覚で使いやすい」とのこと。

Reduxは、ReactJSが扱うUIのstate(状態)を管理をするためのフレームワークです。
Reactではstateの管理するデータフローにFluxを提案していますが、ReduxはFluxの概念を拡張してより扱いやすく設計されています。


#XcodeGen 
XcodeGenはYAMLファイルに記述した設定からxcodeprojectを生成するツールです。
これによりxcodeproject(pbxproj)をgitignoreすることができ、コンフリクトを無くせるなどのメリットがありますが、Derived Data(キャッシュ)不整合でビルドエラーが発生する等の問題が発生したため一時導入が見送りになったそうです。

#Carthage 
Swiftで作られたの最強のライブラリ管理ツール

#CocoaPods 
iOS/Mac向けのアプリを作成する際のライブラリ管理

#Swift Package Manager 
SwiftPMは、Swiftのソースコードで構成されたパッケージを、
依存関係を解決しつつ利用できるようにしてくれる、Apple製のパッケージ管理ツールです。

#Bitrise 
Bitriseはモバイルアプリ開発（iOS, Android, Xamarin, …）における継続的インテグレーション・デリバリー（CI/CD）
 プラットフォームをサービス（PaaS）として提供しています。
ソフトウェアプロジェクトの開発・自動化を手助けするためのツール・サービスの集合体です。

#CircleCI 
Saas型のCI/CDサービスです。Saas型であるという点が特徴です。
CircleCIはクラウド上のコンテナあるいはVMを実行環境として使用します

一般的にCI/CDでやることはビルドとテストとデプロイの3点です。

ビルド
ソースコードから実行可能なアプリケーションを構築します。
具体的には、Dockerイメージのpull、依存パッケージのインストール、コンパイルなどです。

テスト
UTなどのテストコードを実行して動作確認をしたり、Rubocop(Ruby)などのコードスタイルチェックなどを行います。

デプロイ
ビルドしてテストが通ったものを本番環境や検証環境などにリリースします。

#Nimble 
「Nimble」とは？
アサーションの文法を提供するライブラリです。

QuickとNimbleは片方のみ導入することもできます。


#Quick 
「Quick」とは？
テストとテストグループの文法を提供するライブラリです。

RSpec, Specta, Ginkgoにインスパイアされているので、これらでテストを書いたことがある方はとっつきやすいと思います。
私はどれも使ったことがないので詳しくはわかりません。

#Visual Regression Testing
Visual Regression Testing （日本語で 画像回帰テスト、以下 VRT）は、画像の差分を検出する、スナップショットテストのひとつです。ほかのスナップショットテストとして、Jest による、DOM やオブジェクトを対象としたテストがあります。VRT はその対象をスクリーンショット画像、つまり UI をブラウザーで表示したときの見た目としています。